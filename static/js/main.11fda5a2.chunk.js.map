{"version":3,"sources":["config.js","images/settings.svg","images/bot.svg","images/email.svg","images/briefcase.svg","images/moon.svg","images/backgrounds/classic.jpg","images/backgrounds/xp.jpg","images/backgrounds/nasa.jpg","images/backgrounds/clouds.jpg","images/backgrounds/logo.jpg","images/backgrounds/vaporwave.jpg","components/clock.js","images/flag.svg","images/computer.svg","components/startbar.js","components/toolbar.js","components/message.js","components/messenger.js","components/program.js","components/work.js","components/contact.js","components/settings.js","components/shutDown.js","images/screensaver.gif","components/screensaver.js","images/resume.svg","App.js","registerServiceWorker.js","index.js"],"names":["bot","require","default","email","briefcase","settings","icons","chat","url","alt","work","contact","shutdown","systemSettings_background","module","exports","apps","messenger","resumeLink","content","emailLink","linkedin","github","twitter","instagram","title","copy","dialogFlow","token","initialResponse","changeInputResponse","free","options","systemSettings","background","theme","Clock","PureComponent","state","time","startTime","today","Date","hh","getHours","m","getMinutes","this","checkTime","dd","h","setTimeout","setState","componentDidMount","i","render","className","StartBar","openApp","openApps","shutDown","start","openStart","minimizedApps","updateStartbar","currentlyActiveApp","openSettings","nextStatus","onClick","src","flag","Object","keys","map","app","toLowerCase","indexOf","e","computer","defaultProps","Toolbar","image","closeApp","component","notificationStyle","bind","Message","type","user","Messenger","Component","constructor","super","triggerFirstMessage","updateHistory","botName","isTyping","curatedOptions","visible","handleResponse","response","result","fulfillment","messages","message","speech","length","payload","includes","base","find","item","responses","delay","Math","floor","random","moreOptions","links","sendMessage","event","directValue","keyCode","which","inputValue","username","window","dataLayer","push","client","textRequest","then","catch","handleError","handleInputChange","target","value","changeInput","option","chatHistory","ApiAiClient","accessToken","componentDidUpdate","scrollTop","scrollHeight","props","updateActiveApp","previouslyActiveApp","dataView","defaultPosition","x","y","handle","data-view","ref","input","TransitionGroup","index","CSSTransition","timeout","classNames","link","replace","id","autoFocus","onChange","onKeyPress","Program","programName","systemStyle","programIcon","programRights","contentEditable","suppressContentEditableWarning","children","Work","href","Contact","Settings","activeSystemSettings","changeSystemSettings","name","rel","ShutDown","restart","Screensaver","useState","screensaverIsVisible","changeScreensaverVisibility","useEffect","originalDocTitle","document","onmousemove","clearTimeout","setScreensaver","addEventListener","hidden","visibility","join","style","backgroundImage","graphic","programComponents","App","linkClickListener","tagName","openInNewTab","preventDefault","splice","filter","minimizeWindow","status","elem","win","open","focus","loadSystemBackground","existingBackground","localStorage","getItem","setItem","loadSystemTheme","existingTheme","attachEvent","resume","program","ProgramBlock","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","ReactDOM","getElementById","URL","process","origin","fetch","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.11fda5a2.chunk.js","sourcesContent":["const bot = require('./images/bot.svg').default\nconst email = require('./images/email.svg').default\nconst briefcase = require('./images/briefcase.svg').default\nconst settings = require('./images/settings.svg').default\nconst moon = require('./images/moon.svg').default\nconst background_classic = require('./images/backgrounds/classic.jpg').default\nconst background_xp = require('./images/backgrounds/xp.jpg').default\nconst background_nasa = require('./images/backgrounds/nasa.jpg').default\nconst background_clouds = require('./images/backgrounds/clouds.jpg').default\nconst background_logo = require('./images/backgrounds/logo.jpg').default\nconst background_vaporwave = require('./images/backgrounds/vaporwave.jpg').default\n\nconst apps = {\n  messenger: 'Chat',\n  work: 'Work',\n  contact: 'Contact',\n  shutdown: 'Shutdown',\n  settings: 'Settings'\n}\n\nconst icons = {\n  chat: {\n    url: bot,\n    alt: 'Icon of bot'\n  },\n  work: {\n    url: briefcase,\n    alt: 'Icon of briefcase'\n  },\n  contact: {\n    url: email,\n    alt: 'Icon of email'\n  },\n  shutdown: {\n    url: moon,\n    alt: 'Icon of moon'\n  },\n  settings: {\n    url: settings,\n    alt: 'Icon of settings'\n  }\n}\n\nconst resumeLink = \"https://standardresume.co/heathervandervecht\"\n\nconst contact = {\n  content: \"Let's chat! It's a pretty safe bet that you're awesome, and I'm always looking to meet awesome people. I'd love to grab a coffee, or even a beer if that's what you're into - just shoot me a message!\",\n  emailLink: \"mailto:heathervandervecht@gmail.com\",\n  linkedin: \"https://linkedin.com/in/heathervandervecht\",\n  github: \"http://github.com/heathervv\",\n  twitter: \"http://twitter.com/_heathervv\",\n  instagram: \"http://instagram.com/heathervv\"\n}\n\nconst work = [\n  {\n    title: 'Telus Digital Life',\n    url: '//telus.com/mobility/accessories',\n    copy: 'Nascent worked closely with TELUS to innovate the accessory space, and as a part of Nascent I co-lead the team that worked on this project. The main goal we worked towards with TELUS.com/accessories was how to bring the incredible in-store experience they\\'d already developed onto the website. It also presented some fantastic technical opportunities with features like real time inventory and a mobility-wide cart.'\n  },\n  {\n    title: 'Bokeh',\n    url: '//bokeh.agency',\n    copy: 'This project was an incredible experience for quite a few reasons! Not only because David and Doug are some of the nicest, funniest people I\\'ve ever met, but also because they really wanted to try and push the envelope with their website. I had the opportunity to implement physics on this project - not many things are cooler than that. I\\'m also incredibly proud of the case study template as I think it blends functionality and form together in a really delightful way. While the whole site is built to be editable via a CMS, I focused on really supporting flexibility from the CMS for the case studies - it can be ordered however they need, optimized to load tons of videos, with some great animations automatically scattered throughout each page.'\n  },\n  {\n    title: 'Let\\'s Find Momo',\n    url: '//letsfindmomo.com',\n    copy: 'Filament teamed up with Andrew Knapp and Momo (his dog) to create this playful website. As lead dev on this project I helped make sure the project stayed on time, solved any problems the team had, and focused on building out the gameplay functionality. Built with React and WordPress.'\n  },\n  {\n    title: 'The Gordon Foundation',\n    url: '//gordonfoundation.ca',\n    copy: 'Another client of Filament\\'s. The Gordon Foundation helps empower Northern Canada and protect their waters. For this project we focused on optimization and speed, as Northern Canada\\'s internet speeds are kind of awful. As lead dev on this project, I lead user testing and implemented/refactored features that optimized the speed of the site. I also helped the other developers with code reviews and side-by-sides, and taught the team at The Gordon Foundation how to navigate the CMS.'\n  }\n]\n\nconst initialResponse = \"Hi there, I'm HeatherBot - the digital version of Heather! Thanks for stopping by for a chat. You can ask me anything using the \\\"Free type\\\" button below, but for now I've gone ahead and given you some quick select options to help get you started. Go ahead and ask me something!\"\n\nconst changeInputResponse = {\n  free: \"Feel free to ask me whatever you want. 🚀\",\n  options: \"A little guidance never hurt anybody. 🔮\"\n}\n\nconst dialogFlow = {\n  token: '184dc97ff8e442a7991119cf7e45e47f'\n}\n\n// TODO: update URLs to be correct\nconst systemSettings_background = [\n  {\n    'name': 'Classic',\n    'url': background_classic\n  },\n  {\n    'name': 'XP',\n    'url': background_xp\n  },\n  {\n    'name': 'Nasa',\n    'url': background_nasa\n  },\n  {\n    'name': 'Clouds',\n    'url': background_clouds\n  },\n  {\n    'name': 'Logo',\n    'url': background_logo\n  },\n  {\n    'name': 'Vaporwave',\n    'url': background_vaporwave\n  }\n]\n\nconst systemSettings_theme = ['Light', 'Dark']\n\nmodule.exports = {\n  apps,\n  icons,\n  resumeLink,\n  contact,\n  work,\n  dialogFlow,\n  initialResponse,\n  changeInputResponse,\n  systemSettings: {\n    background: systemSettings_background,\n    theme: systemSettings_theme\n  }\n}\n","export default __webpack_public_path__ + \"static/media/settings.7d00555a.svg\";","export default __webpack_public_path__ + \"static/media/bot.6d47cd3f.svg\";","export default __webpack_public_path__ + \"static/media/email.cc80bc11.svg\";","export default __webpack_public_path__ + \"static/media/briefcase.3eba5d9d.svg\";","export default __webpack_public_path__ + \"static/media/moon.153a0b87.svg\";","export default __webpack_public_path__ + \"static/media/classic.ccda0798.jpg\";","export default __webpack_public_path__ + \"static/media/xp.266a4d6d.jpg\";","export default __webpack_public_path__ + \"static/media/nasa.4a78e12c.jpg\";","export default __webpack_public_path__ + \"static/media/clouds.b7aa799d.jpg\";","export default __webpack_public_path__ + \"static/media/logo.85f6a21b.jpg\";","export default __webpack_public_path__ + \"static/media/vaporwave.fe2c08af.jpg\";","import React, { PureComponent } from 'react'\n\nimport '../css/clock.css'\n\nclass Clock extends PureComponent {\n  state = {\n    time: ''\n  }\n\n  componentDidMount() {\n    this.startTime()\n  }\n\n  checkTime(i) {\n    return i < 10 ? i = '0' + i : i\n  }\n\n  startTime = () => {\n    const today = new Date()\n    const hh = today.getHours()\n\n    let m = today.getMinutes()\n    m = this.checkTime(m)\n\n    let dd = 'AM'\n\n    let h = hh\n    if (h >= 12) {\n      h = hh - 12\n      dd = 'PM'\n    }\n    if (h === 0) {\n      h = 12\n    }\n\n    setTimeout(this.startTime, 1000)\n\n    this.setState({ time: `${h}:${m} ${dd}` })\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">{this.state.time}</div>\n    )\n  }\n}\n\nexport default Clock\n","export default __webpack_public_path__ + \"static/media/flag.9c8aceba.svg\";","export default __webpack_public_path__ + \"static/media/computer.525f57e2.svg\";","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { apps, icons } from '../config'\n\n// Components\nimport Clock from './clock'\n\nimport '../css/startbar.css'\n\n// Assets\nimport flag from '../images/flag.svg'\nimport computer from '../images/computer.svg'\nimport settings from '../images/settings.svg'\n\nconst StartBar = ({\n  openApp,\n  openApps,\n  shutDown,\n  start,\n  openStart,\n  minimizedApps,\n  updateStartbar,\n  currentlyActiveApp,\n  openSettings\n}) => {\n  const nextStatus = openStart ? 'close' : 'open'\n\n  return (\n    <Fragment>\n      <div className=\"startbar\">\n        <button\n          className={`start button ${openStart ? 'active' : ''}`}\n          onClick={() => start(nextStatus)}>\n          <img src={flag} alt=\"flag\"/>\n          <span>Start</span>\n        </button>\n        <div className=\"programs\">\n          {\n            Object.keys(apps).map((app, i) => {\n              const className = apps[app].toLowerCase()\n\n              if (app === 'shutdowncomputer') return null\n\n              return (\n                <button\n                  key={i}\n                  className={`\n                    startbar-button startbar-${className} button\n                    ${currentlyActiveApp.indexOf(className) > -1 ? 'active' : ''}\n                    ${\n                      openApps.indexOf(className) === -1 ?\n                        'closed-program' :\n                        ''\n                    } ${\n                      minimizedApps.indexOf(className) === -1 ?\n                        'minimized-program' :\n                        ''\n                    }`}\n                  onClick={e => updateStartbar(className)}>\n                  <img src={icons[className].url} alt={icons[className].alt}/>\n                  <span>{apps[app]}</span>\n                </button>\n              )\n            })\n          }\n        </div>\n        <Clock />\n      </div>\n      {\n        openStart &&\n        <div className=\"start-cupboard visible\">\n          <button\n          className=\"settings\"\n          onClick={openSettings}>\n            <img src={settings} alt=\"settings\"/>\n            <span>Settings</span>\n          </button>\n          <button\n          className=\"shutdown\"\n          onClick={e => shutDown(e)}>\n            <img src={computer} alt=\"computer\"/>\n            <span>Shut Down...</span>\n          </button>\n        </div>\n      }\n    </Fragment>\n  )\n}\n\nStartBar.propTypes = {\n  openApp: PropTypes.func,\n  openApps: PropTypes.array,\n  shutDown: PropTypes.func,\n  start: PropTypes.func,\n  openStart: PropTypes.bool,\n  minimizedApps: PropTypes.array,\n  updateStartbar: PropTypes.func,\n  currentlyActiveApp: PropTypes.string,\n  openSettings: PropTypes.func\n}\n\nStartBar.defaultProps = {\n  openApp: () => {},\n  shutDown: () => {},\n  start: () => {},\n  updateStartbar: () => {},\n  openApps: [],\n  openStart: false,\n  minimizedApps: [],\n  currentlyActiveApp: '',\n  openSettings: () => {}\n}\n\nexport default StartBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../css/toolbar.css'\n\nconst Toolbar = ({\n  image,\n  title,\n  closeApp,\n  component,\n  updateStartbar,\n  notificationStyle\n}) => (\n  <div className=\"toolbar\">\n    <div className=\"title\">\n      <img src={image} alt={image}/> <span>{title}</span>\n    </div>\n    <button className={`button-small ${notificationStyle ? 'disabled' : ''}`} onClick={closeApp.bind(null, component)}>×</button>\n    {\n      !notificationStyle &&\n      <button className=\"button-small minimize\" onClick={() => updateStartbar(component, true)}>_</button>\n    }\n  </div>\n)\n\nToolbar.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  closeApp: PropTypes.func,\n  component: PropTypes.string,\n  updateStartbar: PropTypes.func,\n  notificationStyle: PropTypes.bool\n}\n\nexport default Toolbar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Linkify from 'react-linkify'\n\nconst Message = ({ type, content, user }) => (\n  <div className={`message ${type}`}>\n    <span className=\"username\">{`<${user}>`}</span>\n    <Linkify>\n      {content}\n    </Linkify>\n  </div>\n)\n\nMessage.propTypes = {\n  type: PropTypes.string,\n  content: PropTypes.string,\n  user: PropTypes.string\n}\n\nexport default Message\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ApiAiClient } from 'api-ai-javascript'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport {\n  apps,\n  icons,\n  dialogFlow,\n  initialResponse,\n  changeInputResponse\n} from '../config'\n\n// Components\nimport Draggable from 'react-draggable'\nimport Toolbar from './toolbar'\nimport Message from './message'\n\nimport '../css/messenger.css'\n\nclass Messenger extends Component {\n  constructor() {\n    super()\n\n    // Create new bot client\n    this.client = new ApiAiClient({ accessToken: dialogFlow.token })\n\n    // Set all our base app details\n    this.state = {\n      chatHistory: [],\n      username: `Anon${Math.floor(Math.random() * (9999 - 1000) + 1000)}`,\n      botName: 'HeatherBot',\n      isTyping: true,\n      inputValue: '',\n      curatedOptions: {\n        visible: false,\n        links: [\n          'Who are you?',\n          'Can I see your work?',\n          'What do you like to code in?',\n          'I\\'d like to get in touch with you'\n        ]\n      }\n    }\n  }\n\n  componentDidMount() {\n    // First message is doesn't come from bot so we can introduce the app to the user\n    setTimeout(() => {\n      this.triggerFirstMessage()\n    }, 2000)\n  }\n\n  componentDidUpdate({ openApps }) {\n    // Always keep messenger window scrolled to last message\n    if (openApps.indexOf(apps.messenger.toLowerCase()) !== -1) this.messages.scrollTop = this.messages.scrollHeight\n\n    this.messages.scrollTop = this.messages.scrollHeight\n  }\n\n  // Called once on componentDidMount to say hi to the user\n  triggerFirstMessage = () => {\n    this.updateHistory(initialResponse, this.state.botName, true)\n    this.setState({\n      isTyping: false,\n      curatedOptions: {\n        ...this.state.curatedOptions,\n        visible: true\n      }\n    })\n  }\n\n  // This function listens to any response from the bot\n  handleResponse = (response) => {\n    const { result } = response\n\n    // See what type of response the bot comes back with\n    const type = result.fulfillment.messages.map((message) => {\n      if (message.speech && message.speech.length > 0) return 'single'\n      if (message.payload) return 'multiple'\n\n      return null\n    })\n\n    // Change logic based on response type (multi-based response appears as multiple messages)\n    if (type.includes('multiple')) {\n      const base = result.fulfillment.messages.find((item) => item.payload).payload\n      const responses = base.response\n      let delay = 1000;\n\n      for (let i = 0; i < responses.length; i += 1) {\n        delay += i > 0 ? Math.floor(Math.random() * 2000) + 1000 : 0\n\n        setTimeout(() => {\n          this.updateHistory(responses[i], this.state.botName, true)\n\n          // If we're on the last response, trigger next step\n          if (i === responses.length - 1) {\n            this.setState({ isTyping: false })\n\n            // If user has curated options turned on, check for any new ones from the bot\n            if (this.state.curatedOptions.visible && base.moreOptions) {\n              this.setState({\n                curatedOptions: {\n                  visible: true,\n                  links: base.moreOptions\n                }\n              })\n            }\n          }\n        }, delay)\n      }\n    } else {\n      this.updateHistory(result.fulfillment.speech, this.state.botName, true)\n      this.setState({ isTyping: false })\n    }\n  }\n\n  sendMessage = (event, directValue = null) => {\n    if ((event && (event.keyCode === 13 || event.which === 13)) || directValue) {\n      const message = directValue || this.state.inputValue\n\n      // Pass user message into state\n      this.updateHistory(message, this.state.username)\n\n      // Send user message to analytics\n      window.dataLayer.push({ event: 'dialogflow', message })\n\n      // Send off to bot\n      this.setState({ isTyping: true, inputValue: '' }, () => {\n        this.client.textRequest(message)\n          .then(this.handleResponse)\n          .catch(this.handleError)\n      })\n    }\n  }\n\n  // Basic input function\n  handleInputChange = (event) => {\n    this.setState({ inputValue: event.target.value })\n  }\n\n  // Toggle for user to use preselected messages or type their own to the bot\n  changeInput = (option) => {\n    this.updateHistory(changeInputResponse[option], this.state.botName, true)\n\n    this.setState({\n      curatedOptions: {\n        ...this.state.curatedOptions,\n        visible: !this.state.curatedOptions.visible\n      }\n    })\n  }\n\n  // Basic error handling\n  handleError = () => {\n    this.setState({ isTyping: false })\n  }\n\n  // This is the final frontier. All message-based functions end with a call to this one\n  // It updates the local state with whatever argument was passed to it\n  updateHistory = (message, user, bot = false) => {\n    const { chatHistory } = this.state\n\n    chatHistory.push({\n      user,\n      message,\n      bot\n    })\n\n    this.setState({ chatHistory })\n  }\n\n  render() {\n    const {\n      updateActiveApp,\n      closeApp,\n      updateStartbar,\n      openApps,\n      minimizedApps,\n      currentlyActiveApp,\n      previouslyActiveApp\n    } = this.props\n\n    const {\n      chatHistory,\n      isTyping,\n      inputValue,\n      curatedOptions\n    } = this.state\n\n    const messenger = apps.messenger.toLowerCase()\n    const dataView = (openApps.indexOf(messenger) === -1 || minimizedApps.indexOf(messenger) !== -1) ? 'closed' : ''\n\n    return (\n      <Draggable\n        defaultPosition={{ x: Math.random() * (150 - 50) + 50, y: Math.random() * (150 - 50) + 50 }}\n        handle=\".toolbar\">\n        <div\n          className={`\n              messenger\n              program\n              ${currentlyActiveApp === messenger ? 'active' : ''}\n              ${previouslyActiveApp === messenger ? 'previous-active' : ''}\n            `}\n          onClick={updateActiveApp.bind(null, messenger)}\n          data-view={dataView}\n        >\n          <Toolbar\n            closeApp={closeApp}\n            updateStartbar={updateStartbar}\n            component={messenger}\n            image={icons[apps.messenger.toLowerCase()].url}\n            title={apps.messenger}\n          />\n\n          <div className=\"messages content\" ref={(input) => { this.messages = input }} >\n            <TransitionGroup>\n              {\n                chatHistory.map((item, index) => (\n                  <CSSTransition key={index} timeout={500} classNames=\"message\">\n                    <Message\n                      key={index}\n                      type={item.bot ? 'sent' : 'received'}\n                      user={item.user}\n                      content={item.message}\n                    />\n                  </CSSTransition>\n                ))\n              }\n            </TransitionGroup>\n          </div>\n\n          <span className={`activeTyping ${isTyping ? 'visible' : ''}`}>Heather is typing...</span>\n\n          <div className={`userInput ${isTyping ? 'hidden' : ''}`}>\n            <div className=\"field\">\n              {\n                curatedOptions.visible ? (\n                  <div className=\"buttonWrapper\">\n                    <div>\n                      {\n                        curatedOptions.links.map(link => (\n                          <button\n                            key={link.replace(/\\s+/g, '').toLowerCase()}\n                            className=\"button-medium\"\n                            onClick={() => this.sendMessage(null, link)}>\n                            {link}\n                          </button>\n                        ))\n                      }\n                    </div>\n                  </div>\n                ) : (\n                    <input\n                      type=\"text\"\n                      id=\"messageField\"\n                      autoFocus\n                      value={inputValue}\n                      onChange={this.handleInputChange}\n                      onKeyPress={this.sendMessage}\n                    />\n                  )\n              }\n            </div>\n            <button\n              onClick={() => this.changeInput(curatedOptions.visible ? 'free' : 'options')}\n              className=\"button-medium option-toggle\"\n            >\n              {\n                curatedOptions.visible ? (\n                  'Free type'\n                ) : (\n                    'Curated'\n                  )\n              }\n            </button>\n          </div>\n        </div>\n      </Draggable>\n    )\n  }\n}\n\nMessenger.propTypes = {\n  updateActiveApp: PropTypes.func,\n  closeApp: PropTypes.func,\n  updateStartbar: PropTypes.func,\n  openApps: PropTypes.array,\n  minimizedApps: PropTypes.array,\n  currentlyActiveApp: PropTypes.string,\n  previouslyActiveApp: PropTypes.string\n}\n\nexport default Messenger\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport Draggable from 'react-draggable'\nimport Toolbar from './toolbar'\n\nconst Program = (props) => {\n  return (\n    <Draggable\n      defaultPosition={props.notificationStyle\n        ? {}\n        : {x: Math.random() * (150 - 50) + 50, y: Math.random() * (150 - 50) + 50}\n      }\n      handle=\".toolbar\">\n      <div\n        className={`${props.programName.toLowerCase()} program txt-file ${props.currentlyActiveApp === props.programName.toLowerCase() ? 'active' : ''} ${props.previouslyActiveApp === props.programName.toLowerCase() ? 'previous-active' : ''} ${props.notificationStyle ? 'notification' : ''} ${props.systemStyle ? 'system' : ''}`}\n        data-view={props.openApps.indexOf(props.programName.toLowerCase()) === -1 ? 'closed' : props.minimizedApps.indexOf(props.programName.toLowerCase()) !== -1 ? 'closed' : ''}\n        onClick={props.updateActiveApp.bind(null, props.programName.toLowerCase())}>\n        <Toolbar\n          closeApp={props.closeApp}\n          updateStartbar={props.updateStartbar}\n          component={props.programName.toLowerCase()}\n          image={props.programIcon}\n          title={`${props.programName} ${props.programRights ? props.programRights : ''}`}\n          notificationStyle={props.notificationStyle}\n        />\n        <div\n          className=\"content\"\n          contentEditable={props.contentEditable}\n          suppressContentEditableWarning>\n          {props.children}\n        </div>\n      </div>\n    </Draggable>\n  )\n}\n\nProgram.propTypes = {\n  programName: PropTypes.string.isRequired,\n  programIcon: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  programRights: PropTypes.string,\n  contentEditable: PropTypes.bool,\n  updateActiveApp: PropTypes.func,\n  closeApp: PropTypes.func,\n  updateStartbar: PropTypes.func,\n  openApps: PropTypes.array,\n  minimizedApps: PropTypes.array,\n  currentlyActiveApp: PropTypes.string,\n  previouslyActiveApp: PropTypes.string,\n  notificationStyle: PropTypes.bool,\n  systemStyle: PropTypes.bool\n}\n\nProgram.defaultProps = {\n  programRights: null,\n  contentEditable: false,\n  updateActiveApp: () => {},\n  closeApp: () => {},\n  updateStartbar: () => {},\n  openApps: [],\n  minimizedApps: [],\n  currentlyActiveApp: null,\n  previouslyActiveApp: null,\n  notificationStyle: false,\n  systemStyle: false\n}\n\nexport default Program\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Linkify from 'react-linkify'\nimport { apps, icons, work } from '../config'\n\n// Components\nimport Program from './program'\n\nconst Work = ({\n    updateActiveApp,\n    updateStartbar,\n    closeApp,\n    openApps,\n    minimizedApps,\n    currentlyActiveApp,\n    previouslyActiveApp\n  }) => (\n  <Program\n    programName={apps.work}\n    programRights=\"[Read Only]\"\n    programIcon={icons[apps.work.toLowerCase()].url}\n    updateActiveApp={updateActiveApp}\n    updateStartbar={updateStartbar}\n    closeApp={closeApp}\n    openApps={openApps}\n    minimizedApps={minimizedApps}\n    currentlyActiveApp={currentlyActiveApp}\n    previouslyActiveApp={previouslyActiveApp}\n  >\n    <Linkify>\n      {\n        work.map((item, i) => (\n          <div key={i}>\n            <h3><a href={item.url}>{item.title}</a></h3>\n            <p>{item.copy}</p>\n          </div>\n        ))\n      }\n    </Linkify>\n  </Program>\n\n)\n\nWork.propTypes = {\n  updateActiveApp: PropTypes.func,\n  updateStartbar: PropTypes.func,\n  closeApp: PropTypes.func,\n  openApps: PropTypes.array,\n  minimizedApps: PropTypes.array,\n  currentlyActiveApp: PropTypes.string,\n  previouslyActiveApp: PropTypes.string\n}\n\nexport default Work\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { apps, icons, contact } from '../config'\n\n// Components\nimport Program from './program'\n\nconst Contact = ({\n    updateActiveApp,\n    closeApp,\n    updateStartbar,\n    openApps,\n    minimizedApps,\n    currentlyActiveApp,\n    previouslyActiveApp\n  }) => {\n\n  return (\n    <Program\n      programName={apps.contact}\n      programIcon={icons[apps.contact.toLowerCase()].url}\n      contentEditable\n      updateActiveApp={updateActiveApp}\n      updateStartbar={updateStartbar}\n      closeApp={closeApp}\n      openApps={openApps}\n      minimizedApps={minimizedApps}\n      currentlyActiveApp={currentlyActiveApp}\n      previouslyActiveApp={previouslyActiveApp}\n    >\n      {contact.content}\n      <br/>\n      <br/>\n      ==========================================\n      <br/>\n      <br/>\n      <a href={contact.emailLink}>{contact.emailLink.replace('mailto:', '')}</a> <br/>\n      <a href={contact.linkedin}>LinkedIn</a> <br/>\n      <a href={contact.github}>GitHub</a> <br/>\n      <a href={contact.twitter}>Twitter</a> <br/>\n      <a href={contact.instagram}>Instagram</a>\n    </Program>\n  )\n}\n\nContact.propTypes = {\n  updateActiveApp: PropTypes.func,\n  closeApp: PropTypes.func,\n  updateStartbar: PropTypes.func,\n  openApps: PropTypes.array,\n  minimizedApps: PropTypes.array,\n  currentlyActiveApp: PropTypes.string,\n  previouslyActiveApp: PropTypes.string\n}\n\nexport default Contact\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { apps, icons, systemSettings } from '../config'\n\n// Components\nimport Program from './program'\n\nimport '../css/settings.css'\n\nconst Settings = ({\n    updateActiveApp,\n    updateStartbar,\n    closeApp,\n    openApps,\n    minimizedApps,\n    currentlyActiveApp,\n    previouslyActiveApp,\n    activeSystemSettings,\n    changeSystemSettings\n  }) => (\n  <Program\n    programName={apps.settings}\n    programIcon={icons[apps.settings.toLowerCase()].url}\n    updateActiveApp={updateActiveApp}\n    updateStartbar={updateStartbar}\n    closeApp={closeApp}\n    openApps={openApps}\n    minimizedApps={minimizedApps}\n    currentlyActiveApp={currentlyActiveApp}\n    previouslyActiveApp={previouslyActiveApp}\n    systemStyle\n  >\n    <div className=\"section background\">\n      <p className=\"sectionTitle\">Background</p>\n      <ul className=\"options\">\n        {\n          systemSettings.background.map((background) => {\n            let className = 'option'\n\n            if (background.name === activeSystemSettings.background.name) {\n              className += ' selected'\n            }\n\n            return (\n                <li key={background.name} className={className}><button onClick={() => changeSystemSettings(background)}>{background.name}</button></li>\n            )\n          })\n        }\n      </ul>\n    </div>\n\n    <div className=\"section theme\">\n      <p className=\"sectionTitle\">Appearance</p>\n      <ul className=\"options\">\n        {\n          systemSettings.theme.map((theme) => {\n            let className = 'option'\n\n            if (theme === activeSystemSettings.theme) {\n              className += ' selected'\n            }\n\n            return (\n                <li key={theme} className={className}><button onClick={() => changeSystemSettings(null, theme)}>{theme}</button></li>\n            )\n          })\n        }\n      </ul>\n    </div>\n\n    <div className=\"section attributions\">\n      <p className=\"sectionTitle\">Attributions</p>\n      <p>Emoji artwork is provided by <a href=\"https://emojitwo.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Emojitwo</a>, originally released as <a href=\"https://www.emojione.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Emojione 2.2</a> by <a href=\"http://www.ranks.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Ranks.com</a> with contributions from the Emojitwo community and is licensed under <a href=\"https://creativecommons.org/licenses/by/4.0/legalcode\" target=\"_blank\" rel=\"noopener noreferrer\">CC-BY 4.0.</a></p>\n    </div>\n  </Program>\n\n)\n\nSettings.propTypes = {\n  updateActiveApp: PropTypes.func,\n  updateStartbar: PropTypes.func,\n  closeApp: PropTypes.func,\n  openApps: PropTypes.array,\n  minimizedApps: PropTypes.array,\n  currentlyActiveApp: PropTypes.string,\n  previouslyActiveApp: PropTypes.string,\n  activeSystemSettings: PropTypes.object,\n  changeSystemSettings: PropTypes.func\n}\n\nexport default Settings\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { apps, icons } from '../config'\n\n// Components\nimport Program from './program'\n\nconst ShutDown = ({ restart }) => (\n  <Program\n    currentlyActiveApp={apps.shutdown.toLowerCase()}\n    programName={apps.shutdown}\n    openApps={[apps.shutdown.toLowerCase()]}\n    programIcon={icons[apps.shutdown.toLowerCase()].url}\n    notificationStyle\n    systemStyle\n  >\n    It is now safe to turn off your computer.\n    <br />\n    <br />\n    <button className=\"button-medium\" onClick={restart}>Restart</button>\n  </Program>\n)\n\nShutDown.propTypes = {\n  restart: PropTypes.func.isRequired\n}\n\nexport default ShutDown\n","export default __webpack_public_path__ + \"static/media/screensaver.a1fb69e4.gif\";","import React, { useState, useEffect } from 'react'\nimport graphic from '../images/screensaver.gif'\nimport '../css/screensaver.css'\n\nconst Screensaver = () => {\n    const [screensaverIsVisible, changeScreensaverVisibility] = useState(false)\n    const classNames = [\n        'screensaver',\n        screensaverIsVisible ? 'screensaver-visible' : 'screensaver-not-visible'\n    ]\n\n    useEffect(() => {\n        const originalDocTitle = document.title\n        let timeout\n\n        // Set screensaver if user stops moving for X seconds\n        document.onmousemove = () => {\n            clearTimeout(timeout)\n            setScreensaver(originalDocTitle, false)\n\n            timeout = setTimeout(() => {\n                setScreensaver(\"Zzz... 🌚\", true)\n            }, 30000)\n        }\n\n        // Set screensaver if user changes tab\n        document.addEventListener('visibilitychange', () => {\n            if (document.hidden) {\n                setScreensaver(\"Zzz... 🌚\", true)\n            } else {\n                setScreensaver(originalDocTitle, false)\n            }\n        })\n    }, [])\n\n    const setScreensaver = (title, visibility) => {\n        document.title = title\n        changeScreensaverVisibility(visibility)\n    }\n\n    return (\n        <div className={classNames.join(' ')} style={{ backgroundImage: `url(${graphic})` }} />\n    )\n}\n\nexport default Screensaver","export default __webpack_public_path__ + \"static/media/resume.5bc1bd74.svg\";","import React, { Component } from 'react'\nimport './App.css'\n\nimport { apps, icons, resumeLink, systemSettings } from './config'\nimport StartBar from './components/startbar'\nimport Messenger from './components/messenger'\nimport Work from './components/work'\nimport Contact from './components/contact'\nimport Settings from './components/settings'\nimport ShutDown from './components/shutDown'\nimport Screensaver from './components/screensaver'\n\nimport resume from './images/resume.svg'\n\nimport './css/theme.css'\n\nconst programComponents = {\n  'chat': Messenger,\n  'work': Work,\n  'contact': Contact,\n  'settings': Settings\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      shutDown: false,\n      openApps: [apps.messenger.toLowerCase()],\n      minimizedApps: [],\n      openStart: false,\n      currentlyActiveApp: apps.messenger.toLowerCase(),\n      previouslyActiveApp: '',\n      systemSettings: {\n        background: this.loadSystemBackground(),\n        theme: this.loadSystemTheme()\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (document.addEventListener) {\n      document.addEventListener('click', this.linkClickListener, false)\n    } else {\n      document.attachEvent('onclick', this.linkClickListener)\n    }\n  }\n\n  linkClickListener = (e) => {\n    var event = window.e || e\n\n    if (event.target.tagName === 'A') {\n      this.openInNewTab(event.target.href)\n    }\n  }\n\n  openApp = (e, component) => {\n    e.preventDefault()\n\n    const { openApps, minimizedApps } = this.state\n    openApps.push(component)\n\n    if (minimizedApps.indexOf(component) > -1) {\n      for (let i = minimizedApps.length - 1; i >= 0; i--) {\n        if (minimizedApps[i] === component) {\n            minimizedApps.splice(i, 1);\n        }\n      }\n    }\n\n    this.setState({ openApps, minimizedApps })\n\n    this.updateActiveApp(component)\n\n    this.start('close')\n  }\n\n  closeApp = (component, e) => {\n    e.preventDefault()\n\n    let openApps = this.state.openApps\n    openApps = openApps.filter(e => e !== component)\n\n    this.setState({ openApps })\n  }\n\n  updateStartbar = (component, minimizeWindow) => {\n    const minimizedApps = this.state.minimizedApps\n\n    if (minimizeWindow) {\n      // if we manually ask to minimize\n      minimizedApps.push(component)\n    } else if (this.state.minimizedApps.indexOf(component) > -1) {\n      // if app is currently minimized and needs to be brought back\n      const index = minimizedApps.indexOf(component)\n      minimizedApps.splice(index, 1)\n\n      this.updateActiveApp(component, null)\n    } else {\n      // Otherwise, let's just set to currently active app\n      this.updateActiveApp(component, null)\n    }\n\n    this.setState({ minimizedApps })\n    this.start('close')\n  }\n\n  updateActiveApp = (component, e) => {\n    if (e) e.preventDefault()\n\n    if (component === this.state.updateActiveApp) return\n\n    this.setState({ previouslyActiveApp: this.state.currentlyActiveApp })\n    this.setState({ currentlyActiveApp: component })\n  }\n\n\n  start = (status) => {\n    if (status === 'close')\n      this.setState({ openStart: false })\n    else\n      this.setState({ openStart: true })\n  }\n\n  openInNewTab = (elem) => {\n    const win = window.open(elem, '_blank')\n\n    if(win) win.focus()\n  }\n\n  shutDown = (e, restart = false) => {\n    if (e) e.preventDefault()\n\n    this.setState({\n      shutDown: restart ? false : true,\n      openStart: false,\n      openApps: [],\n      minimizedApps: [],\n      currentlyActiveApp: '',\n      previouslyActiveApp: ''\n    })\n  }\n\n  loadSystemBackground = () => {\n    const existingBackground = localStorage.getItem('background')\n\n    if (existingBackground) {\n      return systemSettings.background.find((background) => background.name === existingBackground)\n    } else {\n      localStorage.setItem('background', systemSettings.background[2].name)\n\n      return systemSettings.background[2]\n    }\n  }\n\n  loadSystemTheme = () => {\n    const existingTheme = localStorage.getItem('theme')\n\n    if (existingTheme) {\n      return systemSettings.theme.find((theme) => theme === existingTheme)\n    } else {\n      localStorage.setItem('theme', systemSettings.theme[0])\n\n      return systemSettings.theme[0]\n    }\n  }\n\n  changeSystemSettings = (background = null, theme = null) => {\n    if (background) {\n      localStorage.setItem('background', background.name)\n\n      this.setState({\n        systemSettings: {\n          ...this.state.systemSettings,\n          background\n        }\n      })\n    }\n\n    if (theme) {\n      localStorage.setItem('theme', theme)\n\n      this.setState({\n        systemSettings: {\n          ...this.state.systemSettings,\n          theme\n        }\n      })\n    }\n  }\n\n  render() {\n    const {\n      openApps,\n      minimizedApps,\n      currentlyActiveApp,\n      previouslyActiveApp,\n      openStart,\n      shutDown,\n      systemSettings\n    } = this.state\n\n    return (\n      <section className={`desktop theme-${systemSettings.theme.toLowerCase()}`} style={{ backgroundImage: `url(${systemSettings.background.url})` }}>\n        <div className=\"icons\">\n          <button onClick={e => this.openApp(e, apps.messenger.toLowerCase())}>\n            <img src={icons[apps.messenger.toLowerCase()].url} alt={icons[apps.messenger.toLowerCase()].alt} /> {apps.messenger}\n          </button>\n          <button onClick={e => this.openApp(e, apps.contact.toLowerCase())}>\n            <img src={icons[apps.contact.toLowerCase()].url} alt={icons[apps.contact.toLowerCase()].alt} /> {apps.contact}\n          </button>\n          <button onClick={e => this.openApp(e, apps.work.toLowerCase())}>\n            <img src={icons[apps.work.toLowerCase()].url} alt={icons[apps.work.toLowerCase()].alt} /> {apps.work}\n          </button>\n          <a href={resumeLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={resume} alt=\"Icon of resume\" /> Resume\n          </a>\n        </div>\n\n        {\n          Object.keys(programComponents).map((program, i) => {\n            if (\n              openApps.indexOf(program) === -1 &&\n              minimizedApps.indexOf(program) === -1\n            ) return null\n\n            const ProgramBlock = programComponents[program]\n\n            return (\n              <ProgramBlock\n                key={i}\n                updateActiveApp={this.updateActiveApp}\n                closeApp={this.closeApp}\n                updateStartbar={this.updateStartbar}\n                openApps={openApps}\n                minimizedApps={minimizedApps}\n                currentlyActiveApp={currentlyActiveApp}\n                previouslyActiveApp={previouslyActiveApp}\n                activeSystemSettings={systemSettings}\n                changeSystemSettings={this.changeSystemSettings}\n              />\n            )\n          })\n        }\n\n        <StartBar\n          openApp={this.openApp}\n          updateActiveApp={this.updateActiveApp}\n          currentlyActiveApp={currentlyActiveApp}\n          openApps={openApps}\n          minimizedApps={minimizedApps}\n          shutDown={this.shutDown}\n          updateStartbar={this.updateStartbar}\n          start={this.start}\n          openStart={openStart}\n          openSettings={e => this.openApp(e, apps.settings.toLowerCase())}\n        />\n\n        <div className={`shutDownPage ${shutDown ? 'visible' : ''}`}>\n          <ShutDown restart={() => this.shutDown(null, true)} />\n        </div>\n\n        <Screensaver />\n      </section>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/normalize.css'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}